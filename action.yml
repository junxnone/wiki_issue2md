# https://www.freecodecamp.org/news/publishing-github-event-data-with-github-actions-and-pages/
# https://stackoverflow.com/questions/58597010/how-to-access-a-github-issue-comment-body-using-github-actions
# This is a basic workflow to help you get started with Actions
# https://github.com/maguowei/iaas/blob/d48834c18b66ae0f3ae32e5e62a6811dfddadcb2/.github/workflows/iaas.yml
# replace invalid characters in filename https://stackoverflow.com/a/50876753/1553656

name: issue2post
description: "Turn issues into markdown file"
branding:
  icon: "archive"
  color: "green"
inputs:
  branch:
    description: "Target branch name to push the markdownfile"
    required: true
    default: "master"
  dir:
    description: "the posts dir"
    required: true
    default: "_posts"
  GITHUB_TOKEN:
    description: "secrets.GITHUB_TOKEN"
    required: true
  created_at:
    description: "github.event.issue.created_at"
    required: true
  updated_at:
    description: "github.event.issue.updated_at"
    required: true
  label_name:
    description: "github.event.issue.label[name]"
    required: true
  title:
    description: "github.event.issue.title"
    required: true
  body:
    description: "github.event.issue.body"
    required: true
  number:
    description: "github.event.issue.bumber"
    required: true
  actor:
    description: "github.actor"
    required: true
  nohead:
    description: "no create/update/..."
    required: true
runs:
  using: "composite"
  steps:
    - id: generate-markdown-file
      name: Turn comment into file
      shell: bash
      run: |
        DATE="${{ inputs.created_at }}"
        mkdir -p ${{ inputs.dir }}
        # useing '' to wrap the title to escapse backticks
        # and quates to wrap title in post body is to escapse backticks in jekyll building
        POST_TITLE=$(sed -E 's/[[:space:]|[:punct:]]/_/g' <<<'${{ inputs.title }}')
        if [ "${{ inputs.title }}" == "_sidebar" ];then
        cat <<'EOF' > docs/"${POST_TITLE}".md
        ${{ inputs.body }}
        
        [![](https://img.shields.io/badge/%2B-Edit%20Sidebar-brightgreen)](https://github.com/${{ github.repository }}/issues/${{ inputs.number }})
        EOF
        elif [ ${{inputs.nohead}} == "true" ];then
        cat <<'EOF' > docs/"${POST_TITLE}".md
        ${{ inputs.body }}
        EOF
        elif [ "${{ inputs.title }}" == "README" ];then
        cat <<'EOF' >  docs/"${POST_TITLE}".md
        ---
        Title | ${{ inputs.title }}
        -- | --
        Last Modify @ | `${{ inputs.updated_at }}`
        Edit @ | [here](https://github.com/${{ github.repository }}/issues/${{ inputs.number }})
        
        ---
        ${{ inputs.body }}
        EOF
        else
        cat <<'EOF' >  docs/"${POST_TITLE}".md
        ---
        Title | ${{ inputs.title }}
        -- | --
        Created @ | `${{ inputs.created_at }}`
        Last Modify @| `${{ inputs.updated_at }}`
        Labels | `${{ inputs.label_name }}`
        Edit @| [here](https://github.com/${{ github.repository }}/issues/${{ inputs.number }})
        
        ---
        ${{ inputs.body }}
        EOF
        fi
    - name: Push changes to repo
      shell: bash
      run: |
        REMOTE=https://${{ inputs.GITHUB_TOKEN }}@github.com/${{ github.repository }}
        git config user.email "${{ inputs.actor }}@users.noreply.github.com"
        git config user.name "${{ inputs.actor }}"
        git pull ${REMOTE}
        git checkout ${{ inputs.branch }}
        git add .
        git status
        git commit -am "Add new comment"
        git push ${REMOTE} ${{ inputs.branch }}
